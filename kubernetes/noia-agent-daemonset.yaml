apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
  labels:
    service: syntropy-agent
  name: syntropy-agent
  namespace: syntropy-agent
spec:
  selector:
    matchLabels:
      service: syntropy-agent
  template:
    metadata:
      labels:
        service: syntropy-agent
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/os
                operator: In
                values:
                - linux
              - key: kubernetes.io/arch
                operator: In
                values:
                - amd64
      containers:
      - env:
        - name: SYNTROPY_CONTROLLER_URL
          valueFrom:
            secretKeyRef:
              key: SYNTROPY_CONTROLLER_URL
              name: syntropy-platform
              optional: false
        - name: SYNTROPY_API_KEY
          valueFrom:
            secretKeyRef:
              key: SYNTROPY_API_KEY
              name: syntropy-platform
              optional: false
        image: syntropy/agent:stable
        imagePullPolicy: Always
        name: syntropy-agent
        resources: {}
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - SYS_MODULE
        stdin: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /var/run/docker.sock
          name: docker
      dnsPolicy: ClusterFirst
      hostNetwork: true
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - hostPath:
          path: /var/run/docker.sock
          type: ""
        name: docker
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 100
    type: RollingUpdate
